name: CI

on:
  pull_request:
    branches: [ "master" ]

jobs:
  build-test:
    name: Build & Test
    
    outputs:
      job-status: ${{ job.status }}
    
    runs-on: ubuntu-latest

    steps:
      - name: List files
        run: ls
    # - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
    #   with:
    #     php-version: '8.0'
    # - uses: actions/checkout@v3
    # - name: Copy .env
    #   run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    # - name: Setup SSH Keys and known_hosts
    #   env:
    #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    #   run: |
    #     mkdir -p ~/.ssh
    #     ssh-keyscan github.com >> ~/.ssh/known_hosts
    #     ssh-agent -a $SSH_AUTH_SOCK > /dev/null
    #     ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
    # - name: Install Dependencies
    #   env:
    #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    #   run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    # - name: Generate key
    #   run: php artisan key:generate
    # - name: Directory Permissions
    #   run: chmod -R 777 storage bootstrap/cache
    # - name: Create Database
    #   run: |
    #     mkdir -p database
    #     touch database/database.sqlite
    # - name: Execute tests (Unit and Feature tests) via PHPUnit
    #   env:
    #     DB_CONNECTION: sqlite
    #     DB_DATABASE: database/database.sqlite
    #   run: vendor/bin/phpunit
    # - name: Create and push docker image
    #   run: PUT_ECR COMMAND
  staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://abc.com
    needs: [build-test]

    steps:
      - name: List files
        run: |
          cd ${{ github.workspace }}
          ls

  prod:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://abc-prod.com
    needs: [staging]

    steps:
      - name: List files
        run: ls
